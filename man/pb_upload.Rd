% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pb_upload.R
\name{pb_upload}
\alias{pb_upload}
\title{Upload data to an existing release}
\usage{
pb_upload(
  file,
  repo = guess_repo(),
  tag = "latest",
  name = NULL,
  overwrite = "use_timestamps",
  use_timestamps = NULL,
  show_progress = getOption("piggyback.verbose", default = interactive()),
  .token = gh::gh_token(),
  dir = NULL
)
}
\arguments{
\item{file}{string: path to file to be uploaded}

\item{repo}{string: GH repository name in format "owner/repo". Default \code{guess_repo()}
tries to guess based on current working directory's git repository}

\item{tag}{string: tag for the GH release, defaults to "latest"}

\item{name}{string: name for uploaded file. If not provided will use the basename of
\code{file} (i.e. filename without directory)}

\item{overwrite}{choice: overwrite any existing file with the same name already
attached to the on release? Options are "use_timestamps", TRUE, or FALSE:
default "use_timestamps" will only overwrite files where the release timestamp
is newer than the local file.}

\item{use_timestamps}{DEPRECATED.}

\item{show_progress}{logical, show a progress bar be shown for uploading?
Defaults to \code{\link[=interactive]{interactive()}} - can also set globally with options("piggyback.verbose")}

\item{.token}{GitHub authentication token, see \code{\link[gh:gh_token]{gh::gh_token()}}}

\item{dir}{directory relative to which file names should be based,
defaults to NULL for current working directory.}
}
\description{
NOTE: you must first create a release if one does not already exists.
}
\examples{
\dontrun{
# Needs your real token to run

readr::write_tsv(mtcars,"mtcars.tsv.xz")
pb_upload("mtcars.tsv.xz", "cboettig/piggyback-tests")
}
}
