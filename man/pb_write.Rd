% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pb_write.R
\name{pb_write}
\alias{pb_write}
\title{Write one object to repo/release}
\usage{
pb_write(
  x,
  file,
  ...,
  repo = guess_repo(),
  tag = "latest",
  write_function = guess_write_function(file),
  .token = gh::gh_token()
)
}
\arguments{
\item{x}{object: memory object to save to piggyback}

\item{file}{string: file name}

\item{...}{additional arguments passed to \code{write_function}}

\item{repo}{string: GH repository name in format "owner/repo". Default
\code{guess_repo()} tries to guess based on current working directory's git repo}

\item{tag}{string: tag for the GH release, defaults to "latest"}

\item{write_function}{function: used to write an R object to file, where the
object is passed as the first argument, the filename as the second argument,
and any additional arguments are subsequently passed in via \code{...}. Default
\code{guess_write_function(file)} will check the file extension and try to find an
appropriate write function if the extension is one of rds, csv, tsv, parquet,
txt, or json, and will abort if not found.}

\item{.token}{GitHub authentication token, see \code{\link[gh:gh_token]{gh::gh_token()}}}
}
\value{
Writes file to release and returns github API response
}
\description{
A convenience wrapper around writing an object to a temporary file and then
uploading to a specified repo/release.
}
\examples{
\donttest{
\dontshow{if (interactive()) \{}
  pb_write(mtcars, "mtcars.rds", repo = "tanho63/piggyback-tests")
  #> ℹ Uploading to latest release: "v0.0.2".
  #> ℹ Uploading mtcars.rds ...
  #> |===============================================================| 100\%
\dontshow{\}}
}
}
\seealso{
Other pb_rw: 
\code{\link{guess_read_function}()},
\code{\link{guess_write_function}()},
\code{\link{pb_read}()}
}
\concept{pb_rw}
