% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pb_read.R
\name{pb_read}
\alias{pb_read}
\title{Read one file into memory}
\usage{
pb_read(
  file,
  ...,
  repo = guess_repo(),
  tag = "latest",
  read_function = guess_read_function(file),
  .token = gh::gh_token()
)
}
\arguments{
\item{file}{string: file name}

\item{...}{additional arguments passed to \code{read_function} after file}

\item{repo}{string: GH repository name in format "owner/repo". Default
\code{guess_repo()} tries to guess based on current working directory's git repo}

\item{tag}{string: tag for the GH release, defaults to "latest"}

\item{read_function}{function: used to read in the data, where the file is
passed as the first argument and any additional arguments are subsequently
passed in via \code{...}. Default \code{guess_read_function(file)} will check the file
extension and try to find an appropriate read function if the extension is one
of rds, csv, tsv, parquet, txt, or json, and will abort if not found.}

\item{.token}{GitHub authentication token, see \code{\link[gh:gh_token]{gh::gh_token()}}}
}
\value{
Result of reading in the file in question.
}
\description{
A convenience wrapper around writing an object to a temporary file and then
uploading to a specified repo/release. This convenience comes at a cost to
performance efficiency, since it first downloads the data to disk and then
reads the data from disk into memory. See \code{vignette("cloud_native")} for
alternative ways to bypass this flow and work with the data directly.
}
\examples{
\donttest{
try({ # try block is to avoid CRAN issues and is not required in ordinary usage
 piggyback::pb_read("mtcars.tsv.gz", repo = "cboettig/piggyback-tests")
})
}
}
\seealso{
Other pb_rw: 
\code{\link{guess_read_function}()},
\code{\link{guess_write_function}()},
\code{\link{pb_write}()}
}
\concept{pb_rw}
