% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pb_download.R
\name{pb_download}
\alias{pb_download}
\title{Download data from an existing release}
\usage{
pb_download(
  file = NULL,
  dest = ".",
  repo = guess_repo(),
  tag = "latest",
  overwrite = TRUE,
  ignore = "manifest.json",
  use_timestamps = TRUE,
  show_progress = getOption("piggyback.verbose", default = interactive()),
  .token = gh::gh_token()
)
}
\arguments{
\item{file}{character: vector of names of files to be downloaded. If \code{NULL},
all assets attached to the release will be downloaded.}

\item{dest}{character: path to destination directory (if length one) or
vector of destination filepaths the same length as \code{file}.
Any directories in the path provided must already exist.}

\item{repo}{string: GH repository name in format "owner/repo". Default \code{guess_repo()}
tries to guess based on current working directory's git repository}

\item{tag}{string: tag for the GH release, defaults to "latest"}

\item{overwrite}{boolean: should any local files of the same name be overwritten? default \code{TRUE}}

\item{ignore}{character: vector of files to ignore (used if downloading "all" via \code{file=NULL})}

\item{use_timestamps}{DEPRECATED.}

\item{show_progress}{logical, show a progress bar be shown for uploading?
Defaults to \code{\link[=interactive]{interactive()}} - can also set globally with options("piggyback.verbose")}

\item{.token}{GitHub authentication token, see \code{\link[gh:gh_token]{gh::gh_token()}}}
}
\description{
Download data from an existing release
}
\examples{
\donttest{
 try({ # this try block is to avoid errors on CRAN, not needed for normal use
   ## Download a specific file.
   ## (if dest is omitted, will write to current directory)
   dest <- tempdir()
   piggyback::pb_download(
     "iris.tsv.gz",
     repo = "cboettig/piggyback-tests",
     tag = "v0.0.1",
     dest = dest
   )
   list.files(dest)
   ## Download all files
   piggyback::pb_download(
     repo = "cboettig/piggyback-tests",
     tag = "v0.0.1",
     dest = dest
   )
   list.files(dest)
 })
 \dontshow{
 unlink(list.files(dest, full.names = TRUE))
 }
}
}
